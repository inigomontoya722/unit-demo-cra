name: Release

on:
  pull_request:
  push:
    tags:
      - v[0-9]+
permissions: write-all

jobs:
  create-issue:
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    outputs:
      issueid: ${{steps.issue.outputs.issue}}
    steps:
      - uses: actions/checkout@v2
      - name: Get current date
        id: date
        run: echo "::set-output name=date::$(date)"
      - name: Create Issue text
        run: echo $'Tag ${{github.ref_name}}\nAuthor ${{ github.actor }}\nDate ${{ steps.date.outputs.date }}\n Changelog\n' >> template.md
      - name: Add changelog
        run: echo $"$(./.github/scripts/changelog ${{github.ref_name}})" >> template.md
      - name: Create Issue
        id: issue
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: echo "issue=$(gh issue create --title "RELEASE" --body-file template.md)" >> "$GITHUB_OUTPUT"

  run-all-checks:
    runs-on: ubuntu-latest

    steps:

      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: 18

      - name: Install dependencies
        run: npm install

      - name: Validate all commits with commitlint from PR
        if: github.event_name == 'pull_request'
        run: npx commitlint --from ${{ github.event.pull_request.base.sha }} --to ${{ github.event.pull_request.head.sha }} --verbose

      - name: Run ESLint
        run: npm run lint

      - name: Build App
        run: npm run build

      - name: Run Unit Testing
        run: npm run test-ci

      - name: Install playwright
        run: npx playwright install

      - name: Run E2E Testing
        run: npm run e2e
  close-issue:
    runs-on: ubuntu-latest
    if: ${{ always() }}
    needs: create-issue
    steps:
      - name: Link for Issue
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ISSUE: ${{needs.create-issue.outputs.issueid}}
        run: gh issue comment $ISSUE --body $"RESULT&#58; ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }} (**${{ needs.create-issue.result }}**)"
      - name: Deploy
        if: needs.create-issue.result == 'success'
        run: echo ${{ needs.create-issue.result }}
  
  pages-deploy:
    runs-on: ubuntu-latest
    needs: [create-issue, close-issue]
    if: needs.create-issue.result == 'success'
    steps:
      - name: Check build
        run: ls ./build
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Pages
        uses: actions/configure-pages@v3
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2
        with:
          path: './build'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
